package com.experian.core.rabbitmq;

import com.rabbitmq.client.Channel;
import com.rabbitmq.client.Connection;
import com.rabbitmq.client.ConnectionFactory;

public abstract class EndPoint {
	protected Channel channel;
	protected Connection connection;
	protected String queue;

	public EndPoint(String queue,String host,int port,String user,String password) throws Exception {
		this.queue = queue;
		// Create a connection factory
		ConnectionFactory factory = new ConnectionFactory();
		// hostname of your rabbitmq server
		factory.setHost(host);
		factory.setPort(port);
		factory.setUsername(user);
		factory.setPassword(password);
		// getting a connection
		connection = factory.newConnection();

		// creating a channel
		channel = connection.createChannel();

		// declaring a queue for this channel. If queue does not exist,
		// it will be created on the server.
		channel.queueDeclare(queue, true, false, false, null);
	}

	public void close() throws Exception {
		this.channel.close();
		this.connection.close();
	}
}
