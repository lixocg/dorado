package com.experian.daas.litigation.test;

import org.apache.kafka.clients.consumer.ConsumerRecord;
import org.apache.log4j.Logger;
import org.junit.Assert;
import org.junit.Test;
import org.junit.internal.runners.JUnit4ClassRunner;
import org.junit.runner.RunWith;
import org.springframework.test.context.ContextConfiguration;

import com.experian.core.kafka.ConsumerCallback;
import com.experian.core.utils.kafka.KafkaUtil;

@SuppressWarnings("deprecation")
@RunWith(JUnit4ClassRunner.class)
@ContextConfiguration(locations = "classpath:spring/spring-*.xml")
public class kafkaTest {
	Logger logger = Logger.getLogger(kafkaTest.class);

	@Test
	public void doSend() {
		for (int i = 0; i <= 200; i++) {
			KafkaUtil.send("parti01", i + "", "data" + i);
			try {
				Thread.sleep(100);
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		Assert.assertTrue(true);
	}

	@Test
	public void doReceive() {
		KafkaUtil.receive(new ConsumerCallback() {

			@Override
			public void afterReceive(ConsumerRecord<String, String> records) {
				logger.info(records.key() + "...." + records.value() + "..." + records.partition());
			}
		}, "parti01group", "parti01", 3);
		try {
			Thread.sleep(Integer.MAX_VALUE);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}
