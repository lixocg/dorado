<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
          http://www.springframework.org/schema/aop 
     http://www.springframework.org/schema/aop/spring-aop-4.1.xsd">
 
	<!-- 自动扫描controller包下的所有类，使其认为spring mvc的控制器 -->
	<context:component-scan base-package="com.experian.**.web.controller" />
	<!-- 配置freeMarker视图解析器 -->  
    <bean id="viewResolverHtml" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">  
        <property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView"/>  
        <property name="contentType" value="text/html; charset=utf-8"/>  
        <property name="suffix" value=".html" />  
        <property name="order" value="0"/>  
    </bean>  
      
    
    <!-- 配置freeMarker的模板路径 -->  
    <bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">  
        <property name="templateLoaderPath">  
            <value>/WEB-INF/views/</value>  
        </property>  
        <property name="freemarkerVariables">  
            <map>  
                <entry key="xml_escape" value-ref="fmXmlEscape" />  
            </map>  
        </property>  
        <property name="defaultEncoding">  
            <value>utf-8</value>  
        </property>  
        <property name="freemarkerSettings">  
            <props> 
                <prop key="template_update_delay">0</prop>
                <prop key="number_format">#</prop>
            </props>  
        </property>
          
    </bean>  
 
    <bean id="fmXmlEscape" class="freemarker.template.utility.XmlEscape"/>  
	
	
	<mvc:annotation-driven enable-matrix-variables="true">
		<mvc:message-converters register-defaults="false">
			<bean
				class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="objectMapper">
					<bean class="com.fasterxml.jackson.databind.ObjectMapper">
						<property name="serializationInclusion">
							<value type="com.fasterxml.jackson.annotation.JsonInclude$Include">NON_NULL</value>
						</property>
						<property name="dateFormat">  
                            <bean class="java.text.SimpleDateFormat">  
                                <constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss" />  
                            </bean>  
                        </property>
					</bean>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	<!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 -->
	<!-- 定义跳转的文件的前后缀 ，视图模式配置 -->
	<!--<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"> 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 <property name="prefix" value="/WEB-INF/views/" /> </bean> -->
	<mvc:view-controller path="/" view-name="forward:/main" />
	<!--&lt;!&ndash; 静态资源映射 &ndash;&gt; -->

	<mvc:resources location="/resources/" mapping="/resources/**" />
	<!-- 拦截器 -->
	<mvc:interceptors>
		<!-- 多个拦截器，顺序执行 -->
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<!-- 需排除拦截的地址 --> 
            <mvc:exclude-mapping path="/resources/**"/> 
            <mvc:exclude-mapping path="/**/api/*"/> 
            <mvc:exclude-mapping path="/base/login*"/> 
			<bean class="com.experian.daas.litigation.web.interceptor.LoginInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors>
	<!-- 当上面要访问的静态资源不包括在上面的配置中时，则根据此配置来访问 -->
	<mvc:default-servlet-handler />
</beans>